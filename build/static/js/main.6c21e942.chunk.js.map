{"version":3,"sources":["Component/TodoList/ContactForm/ContactForm.js","Component/TodoList/Filter/Filter.js","Component/TodoList/ContactList/Item/Item.js","Component/TodoList/ContactList/ContactList.js","Component/TodoList/TodoList.js","Component/App.js","index.js"],"names":["ContactForm","addContact","useState","name","number","objForm","setObjForm","inputHandler","target","value","prev","className","onSubmit","e","preventDefault","type","onChange","Filter","inputHandlerFilter","filter","Item","id","deleteContact","onClick","ContactList","map","el","state","contacts","TodoList","obj","setObj","useEffect","prevContact","localStorage","getItem","res","JSON","parse","console","log","setItem","stringify","filterTask","toLowerCase","includes","user","a","some","alert","uuidv4","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c21e942.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from \"prop-types\";\r\nimport './ContactForm.css'\r\n\r\nconst ContactForm = ({ addContact }) => {\r\n\r\n    const [objForm, setObjForm] = useState({ name: '', number: '' });\r\n    const inputHandler = ({ target }) => {\r\n        const { value, name } = target;\r\n        setObjForm(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const onHandelSubmit = (e) => {\r\n        e.preventDefault();\r\n        addContact({ ...objForm })\r\n        setObjForm({ name: '', number: '' });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form className=\"form\" onSubmit={onHandelSubmit}>\r\n                <p className=\"form-text\">Name</p>\r\n                <input className=\"input-form\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={objForm.name}\r\n                    onChange={inputHandler}\r\n                />\r\n                <p className=\"form-text\">Number</p>\r\n                <input className=\"input-form\"\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={objForm.number}\r\n                    onChange={inputHandler}\r\n                />\r\n                <button className=\"contact-form-btn\" type='submit'>Add contact</button>\r\n            </form>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\n\r\nContactForm.propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ inputHandlerFilter, filter }) => {\r\n\r\n    return (\r\n        <>\r\n            <form>\r\n                <p className=\"form__text\">Find contact by name</p>\r\n                <input className=\"input__form\"\r\n                    type=\"text\"\r\n                    name=\"filter\"\r\n                    value={filter}\r\n                    onChange={inputHandlerFilter}\r\n                />\r\n            </form>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n    inputHandlerFilter: PropTypes.func.isRequired,\r\n    filter: PropTypes.string.isRequired,\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './Item.css'\r\n\r\nconst Item = ({ id, name, number, deleteContact }) => {\r\n    return (\r\n        <li className=\"contact-list-item\">\r\n            <p>\r\n                {name}: {number}\r\n            </p>\r\n            <button\r\n                className=\"contact-list-item-btn\"\r\n                type=\"button\"\r\n                onClick={(e) => {\r\n                    deleteContact(id);\r\n                }}\r\n            >\r\n                <p className=\"contact-list-item-btn-text\">x</p>\r\n            </button>\r\n        </li>\r\n\r\n    );\r\n};\r\n\r\nexport default Item;\r\n\r\nItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    deleteContact: PropTypes.func.isRequired,\r\n}","import React from \"react\";\r\nimport Item from './Item/Item';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ filter, deleteContact }) => {\r\n    return (\r\n        <ul>\r\n            {filter.map(el => <Item key={el.id} {...el} deleteContact={deleteContact} />)}\r\n        </ul>\r\n\r\n    );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n    deleteContact: PropTypes.func.isRequired,\r\n    filter: PropTypes.array.isRequired,\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport Filter from './Filter/Filter';\r\nimport ContactList from './ContactList/ContactList';\r\n\r\nconst state = {\r\n  contacts: [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }\r\n  ],\r\n  filter: ''\r\n};\r\n\r\nconst TodoList = () => {\r\n  const [obj, setObj] = useState({ ...state });\r\n  // useEffect(()=>{\r\n  //   const prevContact = localStorage.getItem('contacts');\r\n  //   const res=JSON.parse(prevContact)\r\n  //   console.log(res);\r\n  //   setObj(prev => ({ ...prev, contacts: [JSON.parse(prevContact)] }))\r\n  // })\r\n    // useEffect(() => {\r\n    //   const prevContact = localStorage.getItem('contacts')\r\n    //   const parsContacts = JSON.parse(prevContact)\r\n    //   if (prevContact) {\r\n    //     setObj(prev => ({ ...prev, contacts: [...parsContacts] })) \r\n    //   }\r\n    // }, []);\r\n\r\n    useEffect(()=>{\r\n      const prevContact = localStorage.getItem('contacts');\r\n        const res=JSON.parse(prevContact);\r\n        console.log(res);\r\n        setObj(prev => ({...prev, contacts: res}))\r\n    },[])\r\n    \r\n    useEffect(() => {\r\n      localStorage.setItem('contacts', JSON.stringify(obj.contacts))\r\n    },[obj.contacts]);\r\n\r\n    \r\n  \r\n  const inputFilter = ({ target }) => {\r\n    const { value, name } = target;\r\n    setObj(prev => ({ ...prev, [name]: value }))\r\n  };\r\n  const delContact = (id) => {\r\n    const contacts = obj.contacts.filter((el) => el.id !== id)\r\n    setObj((prev) => ({ ...prev, contacts }))\r\n  }\r\n\r\n  const vissbleTask = () => {\r\n    return obj.contacts.filter(el => el.name.toLowerCase().includes(obj.filter.toLowerCase()))\r\n  }\r\n\r\n  const filterTask = vissbleTask()\r\n  const addContact = async(user) => {\r\n    if (obj.contacts.some(el => el.name === user.name)) {\r\n      alert(`${user.name} уже записанно, введите другое имя!`)\r\n    } else {\r\n      console.log(obj.contacts);\r\n     setObj(prev => ({ ...prev, contacts: [...prev.contacts, { id: uuidv4(), ...user }] }));\r\n          localStorage.setItem('contacts', JSON.stringify(obj.contacts))\r\n              \r\n\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm addContact={addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter inputHandlerFilter={inputFilter} filter={obj.filter} />\r\n        <ContactList obj={obj} filter={filterTask} deleteContact={delContact} />\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;","import React, { useState } from 'react';\r\nimport TodoList from './TodoList/TodoList'\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <>\r\n      <TodoList />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Component/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}