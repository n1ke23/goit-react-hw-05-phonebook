{"version":3,"sources":["Component/TodoList/ContactForm/ContactForm.js","Component/TodoList/Filter/Filter.js","Component/TodoList/ContactList/Item/Item.js","Component/TodoList/ContactList/ContactList.js","Component/TodoList/TodoList.js","Component/App.js","index.js"],"names":["ContactForm","addContact","isNotifi","setIsNotifi","useState","name","number","objForm","setObjForm","inputHandler","target","value","prev","className","onSubmit","e","preventDefault","type","onChange","Filter","inputHandlerFilter","filter","Item","id","deleteContact","onClick","ContactList","TransitionGroup","component","map","el","CSSTransition","timeout","classNames","state","contacts","TodoList","obj","setObj","useEffect","prevContact","localStorage","getItem","res","JSON","parse","setItem","stringify","filterTask","toLowerCase","includes","user","a","some","setTimeout","uuidv4","in","appear","unmountOnExit","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5600921a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from \"prop-types\";\r\nimport './ContactForm.css'\r\n\r\nconst ContactForm = ({ addContact, isNotifi, setIsNotifi }) => {\r\n\r\n    const [objForm, setObjForm] = useState({ name: '', number: '' });\r\n    const inputHandler = ({ target }) => {\r\n        // if (isNotifi) {\r\n        //     setIsNotifi(false)\r\n        // };\r\n        const { value, name } = target;\r\n        setObjForm(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const onHandelSubmit = (e) => {\r\n        e.preventDefault();\r\n        addContact({ ...objForm })\r\n        setObjForm({ name: '', number: '' });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form className=\"form\" onSubmit={onHandelSubmit}>\r\n                <p className=\"form-text\">Name</p>\r\n                <input className=\"input-form\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={objForm.name}\r\n                    onChange={inputHandler}\r\n                />\r\n                <p className=\"form-text\">Number</p>\r\n                <input className=\"input-form\"\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={objForm.number}\r\n                    onChange={inputHandler}\r\n                />\r\n                <button className=\"contact-form-btn\" type='submit'>Add contact</button>\r\n            </form>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\n\r\nContactForm.propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ inputHandlerFilter, filter }) => {\r\n\r\n    return (\r\n        <>\r\n            <form>\r\n                <p className=\"form__text\">Find contact by name</p>\r\n                <input className=\"input__form\"\r\n                    type=\"text\"\r\n                    name=\"filter\"\r\n                    value={filter}\r\n                    onChange={inputHandlerFilter}\r\n                />\r\n            </form>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n    inputHandlerFilter: PropTypes.func.isRequired,\r\n    filter: PropTypes.string.isRequired,\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './Item.css'\r\n\r\nconst Item = ({ id, name, number, deleteContact }) => {\r\n    return (\r\n        <li className=\"contact-list-item\">\r\n            <p className=\"contact-list-item-text\">\r\n                {name}: {number}\r\n            </p>\r\n            <button\r\n                className=\"contact-list-item-btn\"\r\n                type=\"button\"\r\n                onClick={(e) => {\r\n                    deleteContact(id);\r\n                }}\r\n            >\r\n                <p className=\"contact-list-item-btn-text\">x</p>\r\n            </button>\r\n        </li>\r\n\r\n    );\r\n};\r\n\r\nexport default Item;\r\n\r\nItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    deleteContact: PropTypes.func.isRequired,\r\n}","import React from \"react\";\r\nimport Item from './Item/Item';\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\r\nimport './ContactList.css'\r\nconst ContactList = ({ filter, deleteContact }) => {\r\n    return (\r\n        <TransitionGroup component='ul' className='list-item'>\r\n\r\n            {filter.map(el => <CSSTransition key={el.id} timeout={250} classNames='items'><Item {...el} deleteContact={deleteContact} /></CSSTransition>)}\r\n\r\n        </TransitionGroup>\r\n\r\n    );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n    deleteContact: PropTypes.func.isRequired,\r\n    filter: PropTypes.array.isRequired,\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport ContactForm from \"./ContactForm/ContactForm\"\r\nimport Filter from \"./Filter/Filter\"\r\nimport ContactList from \"./ContactList/ContactList\"\r\nimport \"./TodoList.css\"\r\n\r\nconst state = {\r\n\tcontacts: [\r\n\t\t// { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n\t\t// { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n\t\t// { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n\t\t// { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n\t],\r\n\tfilter: \"\",\r\n}\r\n\r\nconst TodoList = () => {\r\n\tconst [obj, setObj] = useState({ ...state })\r\n\tconst [isNotifi, setIsNotifi] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst prevContact = localStorage.getItem(\"contacts\")\r\n\t\tconst res = JSON.parse(prevContact)\r\n\t\tsetObj((prev) => ({ ...prev, contacts: res }))\r\n\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\"contacts\", JSON.stringify(obj.contacts))\r\n\t}, [obj.contacts])\r\n\r\n\tconst inputFilter = ({ target }) => {\r\n\t\tconst { value, name } = target\r\n\r\n\t\tsetObj((prev) => ({ ...prev, [name]: value }))\r\n\t}\r\n\r\n\tconst delContact = (id) => {\r\n\t\tconst contacts = obj.contacts.filter((el) => el.id !== id)\r\n\t\tsetObj((prev) => ({ ...prev, contacts }))\r\n\t}\r\n\r\n\tconst vissbleTask = () => {\r\n\t\treturn obj.contacts.filter((el) => el.name.toLowerCase().includes(obj.filter.toLowerCase()))\r\n\t}\r\n\tconst reversNotifi = () => {\r\n\t\tsetIsNotifi(true)\r\n\t\tsetTimeout(function () {\r\n\t\t\tsetIsNotifi(false);\r\n\t\t}, 2000);\r\n\t}\r\n\tconst filterTask = vissbleTask()\r\n\tconst addContact = async (user) => {\r\n\t\tif (obj.contacts.some((el) => el.name === user.name)) {\r\n\t\t\treversNotifi()\r\n\t\t\t// alert(`${user.name} уже записанно, введите другое имя!`)\r\n\t\t} else {\r\n\t\t\tsetObj((prev) => ({ ...prev, contacts: [...prev.contacts, { id: uuidv4(), ...user }] }))\r\n\t\t\tlocalStorage.setItem(\"contacts\", JSON.stringify(obj.contacts))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<CSSTransition in={true} appear={true} timeout={500} classNames=\"title\" unmountOnExit>\r\n\t\t\t\t<h1 className='titles'>Phonebook</h1>\r\n\t\t\t</CSSTransition>\r\n\t\t\t<CSSTransition in={isNotifi} timeout={500} classNames=\"alert\" unmountOnExit>\r\n\t\t\t\t<h2 className='alert'>Contact is already exists!</h2>\r\n\t\t\t</CSSTransition>\r\n\t\t\t<ContactForm addContact={addContact} setIsNotifi={setIsNotifi} isNotifi={isNotifi} />\r\n\r\n\t\t\t<CSSTransition in={obj.contacts.length > 1} timeout={250} classNames='filter' unmountOnExit>\r\n\t\t\t\t<Filter inputHandlerFilter={inputFilter} filter={obj.filter} />\r\n\t\t\t</CSSTransition>\r\n\r\n\t\t\t<ContactList obj={obj} filter={filterTask} deleteContact={delContact} />\r\n\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default TodoList\r\n","import React, { useState } from \"react\"\r\nimport TodoList from \"./TodoList/TodoList\"\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TodoList />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Component/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}